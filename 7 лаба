'''
Требуется для своего варианта второй части л.р. №6 (усложненной программы) разработать реализацию с использованием
 графического интерфейса. Допускается использовать любую графическую библиотеку питона.
Рекомендуется использовать внутреннюю библиотеку питона  tkinter.



Вариант 11. Сгенерировать все возможные варианты двумерного массива (К*Т) из чисел 0, 1 и 2. '''



import tkinter as tk
from tkinter import ttk
from tkinter import Scrollbar, VERTICAL
import itertools

class ArrayGenerator:
    def __init__(self, master):
        self.master = master
        master.title("Генератор двумерных массивов")

        # Фрейм для ввода размеров массива
        size_frame = tk.Frame(master)
        size_frame.pack()

        # Метки и поля ввода для К и Т
        self.k_label = tk.Label(size_frame, text="Количество строк (K):")
        self.k_label.pack(side=tk.LEFT)
        self.k_entry = tk.Entry(size_frame)
        self.k_entry.pack(side=tk.LEFT)

        self.t_label = tk.Label(size_frame, text="Количество столбцов (T):")
        self.t_label.pack(side=tk.LEFT)
        self.t_entry = tk.Entry(size_frame)
        self.t_entry.pack(side=tk.LEFT)

        # Кнопка для генерации массива
        generate_button = tk.Button(master, text="Сгенерировать", command=self.generate_arrays)
        generate_button.pack()

        # Фрейм для отображения массивов
        self.array_frame = tk.Frame(master)
        self.array_frame.pack(fill=tk.BOTH, expand=True)

        # Скроллбар
        self.scrollbar = Scrollbar(self.array_frame, orient=VERTICAL)
        self.scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

        # Текстовое поле для вывода массивов
        self.text_area = tk.Text(self.array_frame, wrap=tk.WORD, yscrollcommand=self.scrollbar.set)
        self.text_area.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

        # Связывание скроллбара с текстовым полем
        self.scrollbar.config(command=self.text_area.yview)

    def generate_arrays(self):
        # Получение размеров массива
        try:
            k = int(self.k_entry.get())
            t = int(self.t_entry.get())
        except ValueError:
            tk.messagebox.showerror("Ошибка", "Неверный формат размеров массива")
            return

        # Очистка предыдущего вывода
        self.text_area.delete("1.0", tk.END)

        # Генерация всех возможных массивов
        for combination in itertools.product(range(3), repeat=k*t):
            # Разбиение комбинации на строки массива
            array = [list(combination[j:j+k]) for j in range(0, len(combination), k)]
            # Вывод массива в текстовое поле
            self.text_area.insert(tk.END, str(array) + "\n")

root = tk.Tk()
app = ArrayGenerator(root)
root.mainloop()
